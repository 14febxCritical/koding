KODING_CAKE = '../node_modules/koding-cake/bin/cake'
D = __dirname
processes = new(require 'processes')
require('fs').writeFileSync '/var/run/node/kiteCake.pid', process.pid, 'utf-8'

webhookDeadKite = (pid,name)->
  pid = config.crypto.encrypt pid
  http.get e = "#{config.uri.address}/status/processIsDead/#{name}/#{pid}"



task 'cl3','runs dev kites',(options)->

  processes.run
    name    : "sharedHosting cake"
    cmd     : "#{KODING_CAKE} ./sharedHosting -c config-dev run"
    restart : yes
    onExit  : ->
      # processes.run
      #   name : "alerter"+Date.now()
      #   cmd  : "coffee ../workers/alerter/ -c ../config/dev.coffee"
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes


  processes.run
    name    : 'webterm kite'
    cmd     : "#{__dirname}/webterm -c dev"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes

  processes.run
    name    : "databases cake"
    cmd     : "#{KODING_CAKE} ./databases -c config-dev run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes




task 'cl0', 'runs prod kites',(options)->

  processes.run
    name    : "sharedHosting cake"
    cmd     : "#{KODING_CAKE} ./sharedHosting -c config-prod run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes


  processes.run
    name    : 'webterm kite'
    cmd     : "#{__dirname}/webterm -c prod"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes

  processes.run
    name    : "databases cake"
    cmd     : "#{KODING_CAKE} ./databases -c config-prod run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
