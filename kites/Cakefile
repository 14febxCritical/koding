KODING_CAKE = '../node_modules/koding-cake/bin/cake'
D = __dirname
processes = new(require 'processes')
require('fs').writeFileSync '/var/run/node/kiteCake.pid', process.pid, 'utf-8'

http = require 'http'

webhookDeadKite = (pid,name)->
  pid = config.crypto.encrypt pid
  http.get e = "#{config.uri.address}/status/processIsDead/#{name}/#{pid}"



task 'cl3','runs dev kites',(options)->
  config = require '../config/dev'
  processes.run
    name    : "sharedHosting cake"
    cmd     : "#{KODING_CAKE} ./sharedHosting -c config-dev run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"

  processes.run
    name    : "applications cake"
    cmd     : "#{KODING_CAKE} ./applications -c config-dev run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"

  processes.run
    name    : 'webterm kite'
    cmd     : "#{__dirname}/webterm -c dev"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"

  processes.run
    name    : "databases cake"
    cmd     : "#{KODING_CAKE} ./databases -c config-dev run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"


task 'cl0', 'runs prod kites',(options)->
  config = require '../config/dev'
  url = require('url').parse config.uri.address
  protocol = try require url.protocol.replace /[^\w]/g, ''
  throw new Error "Unsupported protocol: #{url.protocol}"  unless protocol?

  config = require '../config/prod'
  processes.run
    name    : "sharedHosting cake"
    cmd     : "#{KODING_CAKE} ./sharedHosting -c config-prod run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"


  processes.run
    name    : "applications cake"
    cmd     : "#{KODING_CAKE} ./applications -c config-prod run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"

  processes.run
    name    : 'webterm'
    cmd     : "#{__dirname}/webterm -c prod"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"

  processes.run
    name    : "databases cake"
    cmd     : "#{KODING_CAKE} ./databases -c config-prod run"
    restart : yes
    stdout  : process.stdout
    stderr  : process.stderr
    verbose : yes
    onExit  : (pid,name)->
      http.get e = "#{config.uri.address}/status/processIsDead/#{name}"
