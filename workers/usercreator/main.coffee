Bongo   = require 'bongo'
Broker  = require 'broker'
{argv}  = require 'optimist'
{ v4: createId } = require 'node-uuid'

{daisy, race} = Bongo
{mongo, mq} = require('koding-config-manager').load("main.#{argv.c}")

if 'string' is typeof mongo
  mongo = "mongodb://#{mongo}?auto_reconnect"

broker = new Broker mq

worker = new Bongo {
  mongo  : mongo
  mq     : broker
  root   : __dirname
  models : '../social/lib/social/models'
}

createUser = ({username, randomPassword}, callback) ->
  worker.on 'dbClientReady', ->
    {JUser} = worker.models
    JUser.one {username}, (err, user) ->
      return callback err if err
      return callback null, user if user
      password = if randomPassword then createId() else username
      userInfo =
        username       : username
        email          : "#{username}@koding.com"
        password       : password
        passwordStatus : 'autogenerated'
        firstName      : username
      JUser.createUser userInfo, callback

createAccount = ({username, randomPassword}) ->
  createUser {username, randomPassword}, (err, user, account) ->
    handleError = (err) ->
      console.error err
      process.exit(1)

    return handleError err if err
    console.log 'User created' if user
    return process.exit(0) unless account
    account.type = 'registered'

    account.save (err) ->
      return handleError err if err
      console.log 'Account type is updated'
      account.createSocialApiId (err, id) ->
        return handleError err if err
        console.log 'SocialApiId is created', id
        process.exit(0)

createAccount username: "guestuser", randomPassword: yes

