#!/usr/bin/python
# -*- coding: utf-8 -*-
# ~ GG

import os
import re
import sys

from datetime import datetime, timedelta
dirname, filename = os.path.split(os.path.abspath(__file__))

def getDevPath(devName):
    for alt in ['', 'team']:
        path = os.path.join(dirname, alt, devName)
        if os.path.exists(path): return path
    return False

def getNowInDevTZ(tz):
    nowUTC    = datetime.utcnow()
    timeDelta = timedelta(hours=tz)
    return nowUTC + timeDelta

def parseTZ(timeZoneString):
    return int(timeZoneString.replace('GMT',''))

def checkHours(hoursString, now, daydiff):
    info = re.match(r"(?P<start>[0-9:]+) \- (?P<end>[0-9:]+) \@(?P<loc>\w+)", \
                    hoursString).groupdict()
    [startHour, startMinute] = map(int, info['start'].split(':'))
    [endHour, endMinute]     = map(int, info['end'].split(':'))
    start = now.replace(hour=startHour, minute=startMinute) + timedelta(days=daydiff)
    end   = now.replace(hour=endHour, minute=endMinute) + timedelta(days=daydiff)
    loc   = info['loc'].strip()
    if start < now < end:
        return (True, loc)
    else:
        return (False, loc, start - now)

def parseDay(dayString, now, daydiff=0):
    [day, hours] = dayString.split(" | ")
    diffs = []
    for hour in hours.split(", "):
        state = checkHours(hour, now, daydiff)
        if state[0]:
            return state
        else:
            diffs.append(state[2])
    diffs.sort()
    return (False, state[1], diffs[daydiff-1])

def parseCalendar(devName):
    try:
        cal = open(getDevPath(devName)).readlines()
        [fullName, timeZone, city] = re.split("\W\W", cal[0])
    except:
        sys.exit("File format corrupted")
    timeZone = parseTZ(timeZone)
    now = getNowInDevTZ(timeZone)
    today = now.weekday()
    if today > 4:
        print "\n%s is offline at weekends." % fullName
    else:
        current = parseDay(cal[today+2], now)
        if current[0]:
            sys.exit("\n Yay %s is online at %s %s \\o/\n" % (fullName, \
                    city.strip(), current[1]))
        if today == 4:
            diff = "next Monday."
        else:
            diff = current[2]
            if diff < timedelta(days=0):
                diff = parseDay(cal[today+3], now, 1)[2]
        print "\n%s is offline, sorry :/\nBut will be online in %s" % \
              (fullName, diff)
    print "".join(cal[7:-1])

if len(sys.argv) < 3 or sys.argv[-1] != 'online':
    sys.exit( """
        Usage :
            is DEVNAME online
    """)

devName = sys.argv[1]
if not getDevPath(devName):
    sys.exit("No such developer")

parseCalendar(devName)
