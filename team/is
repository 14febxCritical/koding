#!/usr/bin/python
# -*- coding: utf-8 -*-

import os
import re
import sys

from datetime import datetime, timedelta
dirname, filename = os.path.split(os.path.abspath(__file__))

def hasDev(devName):
    return os.path.exists(os.path.join(dirname, devName))

def getNowInDevTZ(tz):
    nowUTC    = datetime.utcnow()
    timeDelta = timedelta(hours=tz)
    return nowUTC + timeDelta

def parseTZ(timeZoneString):
    return int(timeZoneString.replace('GMT',''))

def checkHours(hoursString, now):
    info = re.match(r"(?P<start>[0-9:]+) \- (?P<end>[0-9:]+) \@(?P<loc>\w+)", hoursString).groupdict()
    [startHour, startMinute] = map(int, info['start'].split(':'))
    [endHour, endMinute]     = map(int, info['end'].split(':'))
    start = now.replace(hour=startHour, minute=startMinute)
    end   = now.replace(hour=endHour, minute=endMinute)
    return (start < now < end, info['loc'].strip())
 
def parseDay(dayString, now):
    [day, hours] = dayString.split(" | ")
    for hour in hours.split(", "):
        state = checkHours(hour, now)
        if state[0]: return state
    return [False]

def parseCalendar(devName):
    try:
        cal = open(os.path.join(dirname, devName)).readlines()
        [fullName, timeZone, city] = re.split("\W\W", cal[0])
    except:
        sys.exit("File format corrupted")
    timeZone = parseTZ(timeZone)
    now = getNowInDevTZ(timeZone)
    today = now.weekday()
    if today > 4:
        print "\n%s is offline at weekends." % fullName
    else:
        current = parseDay(cal[today+2], now)
        if current[0]:
            sys.exit("\n Yay %s is online at %s %s \\o/\n" % (fullName, city.strip(), current[1]))
        print "\n%s is offline, sorry :/" % fullName
    print "".join(cal[7:-1])

if len(sys.argv) < 3 or sys.argv[-1] != 'online':
    sys.exit( """
        Usage :     
            is DEVNAME online
    """)

devName = sys.argv[1]
if not hasDev(devName):
    sys.exit("No such developer")

parseCalendar(devName)
