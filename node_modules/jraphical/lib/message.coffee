{ObjectId,secure} = require 'bongo'
Module            = require './module'
Attachment        = require './attachment'

module.exports = class Message extends Module

  @set
    schema          :
      originType    :
        type        : String
        required    : yes
      originId      :
        type        : ObjectId
        required    : yes
      title         : String # TODO: do we need title AND subject?
      subject       : String
      body          : String
      repliesCount  :
        type        : Number
        default     : 0
      attachments   : [Attachment]
      meta          : require 'bongo/bundles/meta'
    # teaserFields    : ['originType','originId','subject','repliesCount','meta.createdAt','meta.modifiedAt']

  @getIsRepliable =-> yes
  @getDefaultRole =-> 'message'

  # constructor: (account, message)->
  #   if message and 'string' isnt typeof message
  #     {body, subject} = message
  #   unless account.getId?
  #     console.log account, account.constructor
  #   super {
  #     originType : account.constructor.name
  #     originId   : account.getId()
  #     subject
  #     body
  #   }

  sign:(account)->
    @originType = account.constructor.name
    @originId   = account.getId()
    @

  @create =(account, data, callback)->
    constructor = @
    message = new constructor data
    message.sign account
    message.validate (err)->
      console.log arguments
    message.save (err)->
      callback? err, message

  @setStructure =(structure)->