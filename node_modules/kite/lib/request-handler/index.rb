require "rubygems"
require "bundler/setup"
require 'pusher-client'
require 'net/http'

require './parse_options'

log = Logger.new($options[:logfile])

class KiteRequestHandler
  def initialize(config)
    @config = config
    @socket = PusherClient::Socket.new(config[:key], config)
    add_listener("private-krh-#{$options[:kite_name]}", 'join')
    add_listener("private-krh-#{$options[:kite_name]}", 'part')
  end
  
  def join(channel)
    add_listener(channel[:channel], 'client-message')
  end

  def part(channel)
    @socket.unsubscribe(channel[:channel])
  end
   
  def add_listener(channel, event)
    @socket.subscribe(channel, 'khr')
    @socket[channel].bind(event) do |msg|
      clean_event = event
      clean_event[/^(client-)?/] = ''
      if respond_to? clean_event
        __send__(clean_event, msg) 
      else
        send_request(channel, event,  msg)
      end
    end
  end

  def send_request(channel, event, msg)
    log.info channel, event, msg
    msg[:username] = channel.split('-')[2]
    res = Net::HTTP.post_form(URI.parse(@config[:kite_uri]), msg)
    puts res.body
  end

  def connect
    @socket.connect
  end
end

PusherClient.logger = log
handler = KiteRequestHandler.new($options)
handler.connect

