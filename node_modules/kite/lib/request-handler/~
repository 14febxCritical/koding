require "rubygems"
require "bundler/setup"
require 'optparse'
require 'pusher-client'
require 'open-uri'
require 'net/http'

PusherClient.logger = Logger.new(STDOUT)


class KiteRequestHandler
  def initialize(config)
    @config = config
    @socket = PusherClient::Socket.new(config[:key], config)
  end
  
  def add_listener(channel, event)
    @socket.subscribe(channel, 'khr')
    @socket[channel].bind(event) do |msg|
      send(channel, event,  msg)
    end
  end

  def send_(channel, event, msg)
    puts @config.inspect
    data = {
      'channel' => channel,
      'event'   => event,
      'message' => msg
    }
    post_data = Net::HTTP.post_form(URI.parse(@config[:kite_uri]), data)
    puts post_data.body
  end

  def send(channel, event, msg)
    params = {
      :channel => channel,
      :event   => event,
      :message => msg
    }
    res = Net::HTTP.post_form(URI.parse(@config[:kite_uri]), params)
    puts res.body
  end

  def connect
    @socket.connect
  end
end


options = {}
OptionParser.new do |opts|
  opts.banner = 'Spawn a listener for a given channel'
  opts.on('-k', '--use-config K') {|k| options[:config_path] = k}
  opts.on('-c', '--channel C') {|c| options[:channel] = c}
  opts.on('-u', '--kite-uri U') {|u| options[:kite_uri] = u}
end.parse!

handler = KiteRequestHandler.new(
  :key      => 'a6f121a130a44c7f5325',
  :secret   => '9a2f248630abaf977547',
  :kite_uri => 'http://cl3.beta.service.aws.koding.com:4568/foo.php'
)
handler.add_listener(options[:channel], 'client-message')
handler.connect

