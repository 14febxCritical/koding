{
  "name": "aws2js",
  "main": "./lib/aws.js",
  "version": "0.7.4",
  "description": "AWS (Amazon Web Services) APIs client implementation for node.js",
  "scripts": {
    "install": "node tools/install.js"
  },
  "dependencies": {
    "lodash": ">=0.6.x",
    "semver": ">=1.0.x",
    "npm": ">=1.0.x",
    "mime-magic": "~0.3.0"
  },
  "devDependencies": {
    "http-get": ">=0.4.0"
  },
  "engines": {
    "node": ">=0.4.10"
  },
  "homepage": "https://github.com/SaltwaterC/aws2js",
  "author": {
    "name": "Stefan Rusu",
    "url": "http://www.saltwaterc.eu/"
  },
  "contributors": [
    {
      "name": "Dan Tillberg",
      "url": "http://tillberg.us/"
    },
    {
      "name": "Andrew Paulin",
      "url": "https://github.com/ConstantineXVI"
    },
    {
      "name": "Dave Cleal",
      "url": "https://github.com/dcleal"
    },
    {
      "name": "Carlos Guerreiro",
      "url": "http://perceptiveconstructs.com/"
    },
    {
      "name": "Nikita",
      "url": "https://github.com/nab"
    },
    {
      "name": "AYUkawa,Yasuyuk",
      "url": "https://github.com/toomore-such"
    },
    {
      "name": "ske",
      "url": "https://github.com/ske"
    },
    {
      "name": "Joe Roberts",
      "url": "https://github.com/zefer"
    },
    {
      "name": "sauvainr",
      "url": "https://github.com/sauvainr"
    },
    {
      "name": "Thomas Bruyelle",
      "url": "https://github.com/tbruyelle"
    },
    {
      "name": "Dan Ordille",
      "url": "https://github.com/dordille"
    },
    {
      "name": "ubert",
      "url": "https://github.com/ubert"
    },
    {
      "name": "Jacky Jiang",
      "url": "https://github.com/t83714"
    },
    {
      "name": "Alon Burg",
      "url": "http://burg-alon.9folds.com/"
    },
    {
      "name": "Matt Monson",
      "url": "https://github.com/mattmonson"
    },
    {
      "name": "Stephen Lynn",
      "url": "https://github.com/lynns"
    },
    {
      "name": "Dan Ordille",
      "url": "https://github.com/dordille"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/SaltwaterC/aws2js.git"
  },
  "keywords": [
    "amazon",
    "aws",
    "rest",
    "api",
    "https",
    "query api",
    "ec2",
    "rds",
    "ses",
    "elb",
    "s3",
    "iam",
    "auto scaling",
    "cloudwatch",
    "elasticache",
    "sqs",
    "simpledb",
    "sdb",
    "security token service",
    "sts",
    "dynamodb",
    "sns",
    "emr",
    "elastic mapreduce"
  ],
  "readme": "## About\n\nAmazon Web Services node.js module. Originally a fork of [aws-lib](https://github.com/livelycode/aws-lib/).\n\n * [Changelog](https://github.com/SaltwaterC/aws2js/blob/master/doc/CHANGELOG.md)\n * [License](https://github.com/SaltwaterC/aws2js/blob/master/doc/LICENSE.md)\n\n## Installation\n\nEither manually clone this repository into your node_modules directory, then run `npm install` on the aws2js top directory, or the recommended method:\n\n> npm install aws2js\n\n[npm](https://github.com/isaacs/npm) is a direct dependency of this library. It is used programmatically to install the dependencies for XML and MIME parsing.\n\nBy default, the module installs as dependencies the [libxml-to-js](https://github.com/SaltwaterC/libxml-to-js) and the [mime-magic](https://github.com/SaltwaterC/mime-magic) libraries. Under Windows, it installs by default with [xml2js](https://github.com/Leonidas-from-XIV/node-xml2js) and mime-magic.\n\nBasically, under Windows the default installation is the equivalent of:\n\n> npm install aws2js --xml2js true\n\nIf you want to install the library without binary dependencies, you can issue this npm command:\n\n> npm install aws2js --xml2js true --mime true\n\nThis installs the library with xml2js and [mime](https://github.com/broofa/node-mime) as dependencies. Please notice that the mime library detects the MIME type by doing a file extension lookup, while mime-magic does it the proper way by wrapping the functionality of libmagic. You have been warned.\n\nThe '--xml2js true' and '--mime true' are boolean flags, therefore you may use them in any combination, if applicable.\n\nIn order to use these flags when this package is referenced from a package.json file, the recommendations are:\n\n * edit the ~/.npmrc file, add these values xml2js = true and / or mime = true\n * define the appropriate environment variables: npm_config_xml2js=true and / or npm_config_mime=true\n\nThe above methods are equivalent. You need to pick just one.\n\n## Project and Design goals\n\n * HTTPS-only APIs communication (exceptions allowed for HTTP-only APIs)\n * Proper error reporting\n * Simple to write clients for a specific AWS service (abstracts most of the low level plumbing)\n * Simple to use AWS API calls\n * Higher level clients for specific work flows\n * Proper documentation\n\n## Supported Amazon Web Services\n\n * [Amazon EC2](https://github.com/SaltwaterC/aws2js/wiki/EC2-Client) (Elastic Compute Cloud)\n * [Amazon RDS](https://github.com/SaltwaterC/aws2js/wiki/RDS-Client) (Relational Database Service)\n * [Amazon SES](https://github.com/SaltwaterC/aws2js/wiki/SES-Client) (Simple Email Service)\n * [Amazon ELB](https://github.com/SaltwaterC/aws2js/wiki/ELB-Client) (Elastic Load Balancing)\n * [Amazon IAM](https://github.com/SaltwaterC/aws2js/wiki/IAM-Client) (Identity and Access Management)\n * [Amazon Auto Scaling](https://github.com/SaltwaterC/aws2js/wiki/Auto-Scaling-Client)\n * [Amazon CloudWatch](https://github.com/SaltwaterC/aws2js/wiki/CloudWatch-Client)\n * [Amazon ElastiCache](https://github.com/SaltwaterC/aws2js/wiki/ElastiCache-Client)\n * [Amazon SQS](https://github.com/SaltwaterC/aws2js/wiki/SQS-Client) (Simple Queue Service)\n * [Amazon CloudFormation](https://github.com/SaltwaterC/aws2js/wiki/CloudFormation-Client)\n * [Amazon SDB](https://github.com/SaltwaterC/aws2js/wiki/SDB-Client) (SimpleDB)\n * [Amazon STS](https://github.com/SaltwaterC/aws2js/wiki/STS-Client) (Security Token Service)\n * [Amazon DynamoDB](https://github.com/SaltwaterC/aws2js/wiki/DynamoDB-Client)\n * [Amazon SNS](https://github.com/SaltwaterC/aws2js/wiki/SNS-Client) (Simple Notification Service)\n * [Amazon EMR](https://github.com/SaltwaterC/aws2js/wiki/EMR-Client) (Elastic MapReduce)\n * [Amazon S3](https://github.com/SaltwaterC/aws2js/wiki/S3-Client) (Simple Storage Service)\n\n## Contributions\n\nFor the moment, this project is largely a one man show. Bear with me if things don't move as fast as they should. There are a handful of [aws2js contributors](https://github.com/SaltwaterC/aws2js/blob/master/doc/CONTRIBUTORS.md) as well. The community makes things to be better for everyone.\n\nIf you'd like to contribute your line of code (or more), please send a pull request against the future branch. This makes things to be easier on my side. Feature branches are also acceptable. Even commits in your master branch are acceptable. I don't rely on GitHub's merge functionality as I always pull from remotes and manually issue the merge command.\n\nI ask you to patch against the future branch since that's the place where all the development happens, therefore it should be the least conflicts when merging your code. I use the master only for integrating the releases. The master branch always contains the latest stable release.\n",
  "_id": "aws2js@0.7.4",
  "dist": {
    "shasum": "f0735964e21fd80b2378267b9254afab7467d97d"
  },
  "_from": "aws2js"
}
