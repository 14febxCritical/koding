ProgressBar = require 'progress'
fs = require 'fs'
{exec} = require 'child_process'
log = console.log

tmpDir = "#{__dirname}/../.tmp"
tmpFile = "#{tmpDir}/.#{Date.now()}.js"
tmpFileCompiled = "#{tmpFile}.min.js"
try
  fs.mkdirSync tmpDir
catch e
  #don't catch

module.exports = (js,callback)->
  totalTicks = 200
  bar = new ProgressBar 'Closure compiling kd.js [:bar] :percent :elapseds',{total: 200,width:50,incomplete:" "}
  ticks = 0
  a = setInterval ->
    bar.tick()
    ticks++
  ,500

  fs.writeFile tmpFile,js,(err)->
    execStr = "java -jar #{__dirname}/compiler.jar --js #{tmpFile} --js_output_file #{tmpFileCompiled}"
    failed = no
    exec execStr,(err,stdout,stderr)->
      if err
        log err
        log e = "CLOSURE FAILED TO COMPILE KD.JS CHECK THE ERROR MSG ABOVE. EXITING. (command: #{execStr})"
        failed = yes
        callback e
      # log.debug "closure compile finished successfully."
      bar.tick() for ko in [ticks...totalTicks] # tick the remaining ticks


      # read the compiled file and send over
      fs.readFile tmpFileCompiled,'utf8',(err,data)->
        clearInterval a
        unless err
          callback null,data
          fs.unlink tmpFileCompiled,->
          fs.unlink tmpFile,->
        else
          log "something wrong with compressing #{tmpFile}",execStr
          callback err
        
