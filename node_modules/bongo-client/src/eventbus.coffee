module.exports = class EventBus

  ListenerTree = require './listenertree'

  constructor:(@mq)->
    @tree = new ListenerTree
    @oids = {}
    @channel = @mq.subscribe 'updateInstances', fineGrained:yes
    # @channel.on 'broker:subscription_succeeded', =>
    #   @channel.on '#', @dispatch.bind(@)

  dispatch:(payload, routingKey)->
    @tree.emit routingKey, payload

  getRoutingKey =(oid, event)-> "oid.#{oid}.event.#{event}"

  on:(inst, event, listener)->
    oid = inst.getId()
    unless @oids[oid]?
      @oids[oid] = 0
      @channel.on getRoutingKey(oid, '#'), @dispatch.bind(@)
    @oids[oid]++
    @tree.on getRoutingKey(oid, event), listener

  off:(inst, event, listener)->
    oid = inst.getId()
    if 0 is @oids[oid]-- then
      # @channel.off getRoutingKey(oid, '#') TODO
    @tree.off getRoutingKey(oid, event), listener