fs = require("fs")
path = require 'path'
{EventEmitter}  = require 'events'

walk = (options, callback) ->
  {dir,groupName} = options
  results = []
  fs.readdir dir, (err, list) ->
    return callback(err)  if err
    pending = list.length
    return callback(null, results)  unless pending
    list.forEach (file) ->
      file = dir + "/" + file
      fs.stat file, (err, stat) ->
        if stat and stat.isDirectory()
          walk {dir:file}, (err, res) ->
            results = results.concat(res)
            callback null, results  unless --pending
        else
          results.push {file  : path.normalize(file), mtime : stat.mtime, groupName}
          callback null, results  unless --pending

module.exports = class Watcher extends EventEmitter

  constructor:(@options)->
    
    @init @options
    @options.interval ?= 1000
    @on "ready",(watchList)=>
      @watchList = watchList
      setInterval =>
        @startWatching()
      ,@options.interval

  init:(options)->
    for groupName,val of options.groups
      do (groupName,val) =>
        for folder in val.folders
          do (groupName,folder)=>
            walk {dir:folder,groupName},(err,res)=>
              watchList = {}
              for file in res              
                watchList[file.file] = {mtime : file.mtime, groupName}
              @emit "ready",watchList
  
  startWatching:(fileList = @watchList) ->
    watcher = @
    for path,info of fileList
      do (path,info) ->
        fs.stat path, (err, stat) ->
          if stat.mtime > info.mtime            
            change = {path,groupName:info.groupName}
            watcher.emit "change", change
            watcher.options.groups[info.groupName].onChange? change.path
            watcher.options.onChange? change
            info.mtime = stat.mtime



# a = new Watcher
#   groups:
#     a :
#       folders : ['../../client']
#       onRead  : (file,callback) ->
#       onChange : (path) ->
#         console.log "#{path} has changed."
#     onChange: (change)->
#       console.log "#{change.path} has changed on group #{change.groupName}"


