{exec,spawn}  = require "child_process"
{EventEmitter} = require "events"

class Processes extends EventEmitter
  constructor:->
    @list = {}
  
  run  : (options,callback) ->
    {name,restart,restartInterval,cmd,log,onExit} = options
    console.log "about to run #{name}"
    onExit ?= ->
    if name is '' then name = Date.now()
    if restartInterval is '' then restartInterval = 1000
    cmdA = cmd.split(" ")

    cp = spawn cmdA[0],cmdA[1...]
    @list[name] = cmd:cmd, process : cp, pid : cp.pid
  
    unless log is false
      cp.stdout.on 'data', (data) -> log "#{data}".replace /\n+$/, ''
      cp.stderr.on 'data', (data) -> log "#{data}".replace /\n+$/, ''
    
    cp.on 'exit', () =>
      #@emit "exit",cp.pid
      onExit cp.pid
      if restart is yes
        setTimeout (=> @run options,callback),restartInterval
        console.log "Restarting the process in #{restartInterval} msecs." if log   
  
  get : (name)->
    @list[name].process

  kill :(name)->
    exec "kill -9 #{@list[name].pid}"

module.exports = Processes