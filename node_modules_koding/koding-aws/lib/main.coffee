aws = require 'aws-sdk'

awsKey = ''
awsSecret = ''

AWS =
  aws: aws
  init: (config) ->
    awsKey = config.key
    awsSecret = config.secret

    aws.config.update
      accessKeyId: awsKey
      secretAccessKey: awsSecret
    aws.config.update
      region: 'us-east-1'

  buildTemplate: (template, callback) ->
    template.buildTemplate (err, data) ->
      callback err, data

  startEC2: (config, callback) ->
    console.log "Building"
    params =
      ImageId: config.ami
      MinCount: 1
      MaxCount: 1
      KeyName: config.keyName
      SecurityGroupIds: config.securityGroups
      UserData: new Buffer(config.userData).toString('base64')
      InstanceType: config.type
      SubnetId: config.subnet

    ec2 = new aws.EC2.Client()
    ec2.runInstances params, (err, request) ->
      if err
        console.log err
      else
        instance = request.Instances[0]
        console.log instance
        params =
           Resources: [instance.InstanceId]
           Tags: config.tags
        ec2.createTags params, (err, request) ->
          console.log err
          console.log request

  getNextCephName: (type, callback) ->
    params =
      Filters: [
        Name: 'tag:ceph-type'
        Values: [type]
      ]

    ec2 = new aws.EC2.Client()
    ec2.describeInstances params, (err, data) ->
      if err
        callback err, ''
      hostnames = []
      for res in data.Reservations
        for ins in res.Instances
          for tag in ins.Tags
            if tag.Key == 'ceph-id'
              if type == 'mon'
                hostnames.push tag.Value.charCodeAt(0)
              else
                hostnames.push parseInt tag.Value

        hostnames.sort()
        hostnames.reverse()

      if type == 'mon'
        if hostnames.length == 0
          nextName = 'a'
        else
          nextName = String.fromCharCode(hostnames[0] + 1)
      else
        if hostnames.length == 0
          nextName = 1
        else
          nextName = hostnames[0] + 1

      callback no, nextName

module.exports = AWS