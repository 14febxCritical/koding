scrub = (obj) ->
  for own key, val of obj
    obj[key] = scrub val  if val? and 'object' is typeof val

  if obj?[0]?.$?.nil?
  then [ null ]
  else if (o = obj?[0])?
    switch o.$?.type
      when 'integer'  then [o._ | 0]
      when 'datetime' then [new Date o._]
      # TODO: implement any other revivers for the recurly API
      else obj
  else obj

ifString = (str)-> if typeof str is 'string' then str else ''

class exports.Error
  # Recurly's error entry structure. I'll use the same structure
  # for socket/http errors.
  constructor: (@short = '', @message = '', @field = '') ->

class exports.Account
  #
  # ACCOUNTS
  # See https://docs.recurly.com/api/accounts for XML format
  #
  constructor: (xmlJs, @billing) ->
    xmlJs = scrub xmlJs

    @firstName  = xmlJs.first_name[0]
    @lastName   = xmlJs.last_name[0]
    @email      = xmlJs.email[0]
    @username   = xmlJs.username[0]
    # TODO: move the configuration out of the code:
    @url        = "https://koding.recurly.com/account/#{ xmlJs.hosted_login_token[0] }"

class exports.Adjustment
  #
  # ADJUSTMENTS (ONE-TIME CHARGE/CREDIT TO SUBSCRIPTION)
  # See https://docs.recurly.com/api/invoices for XML format
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @uuid         = xmlJs.uuid[0]
    @amount       = xmlJs.total_in_cents[0]
    @currency     = xmlJs.currency[0]
    @description  = if xmlJs.description[0].$ then '' else xmlJs.description[0]
    @type         = xmlJs.$.type
    @origin       = xmlJs.origin[0]

class exports.Invoice
  #
  # INVOICES
  # See https://docs.recurly.com/api/invoices for XML format
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @uuid     = xmlJs.uuid[0]
    @amount   = xmlJs.total_in_cents[0]
    @currency = xmlJs.currency[0]
    @state    = xmlJs.state[0]


class exports.PaymentMethod
  #
  # PAYMENT METHODS
  # See https://docs.recurly.com/api/accounts for XML format
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @cardFirstName  = xmlJs.first_name[0]
    @cardLastName   = xmlJs.last_name[0]
    @cardNumber     = "#{ (Array 13).join('*') }#{ xmlJs.last_four }"
    @cardMonth      = xmlJs.month[0]
    @cardYear       = xmlJs.year[0]
    @cardCV         = '***'
    @cardType       = xmlJs.card_type[0]
    @address1       = xmlJs.address1[0]
    @address2       = ifString xmlJs.address2[0]
    @city           = ifString xmlJs.city[0]
    @state          = ifString xmlJs.state[0]
    @zip            = xmlJs.zip[0]
    @country        = xmlJs.country[0]
    @company        = xmlJs.company[0]
    @vatNumber      = xmlJs.vat_number[0]
    @phone          = xmlJs.phone[0]

class exports.Plan
  #
  # PLANS
  # See https://docs.recurly.com/api/plans for documentation
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @title        = xmlJs.name[0]
    @planCode     = xmlJs.plan_code[0]
    @desc         = ifString xmlJs.description[0]
    @feeAmount    = xmlJs.unit_amount_in_cents[0].USD
    @feeInitial   = xmlJs.setup_fee_in_cents[0].USD
    @feeInterval  = xmlJs.plan_interval_length

class exports.Subscription
  #
  # SUBSCRIPTIONS
  # See https://docs.recurly.com/api/subscriptions for documentation
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @planCode         = xmlJs.plan[0].plan_code[0]
    @paymentMethodId  = (xmlJs.account[0].$.href.split '/').pop()
    @quantity         = xmlJs.quantity[0]
    @uuid             = xmlJs.uuid[0]
    @currency         = xmlJs.currency[0]
    @status           = xmlJs.state[0]
    @activatedAt      = xmlJs.activated_at[0]
    @expiresAt        = xmlJs.expires_at[0]
    @renewAt          = xmlJs.current_period_ends_at[0]
    @feeAmount        = xmlJs.unit_amount_in_cents[0]

    if xmlJs.pending_subscription
      @pending =
        plan      : xmlJs.pending_subscription[0].plan[0].plan_code[0]
        quantity  : xmlJs.pending_subscription[0].quantity[0]

class exports.Transaction
  #
  # TRANSACTIONS
  # See https://docs.recurly.com/api/transactions for documentation
  #
  constructor: (xmlJs) ->
    xmlJs = scrub xmlJs

    @uuid       = xmlJs.uuid[0]
    @status     = xmlJs.status[0]
    @amount     = xmlJs.amount_in_cents[0]
    @tax        = xmlJs.tax_in_cents[0]
    @currency   = xmlJs.currency[0]
    @createdAt  = xmlJs.created_at[0]
    @refundable = xmlJs.refundable[0]
    @source     = xmlJs.source[0]

    @invoice    = xmlJs.invoice[0].$.href  if xmlJs.invoice

    if @status in ['success', 'void']
      billing     = xmlJs.details[0].account[0].billing_info[0]
      @owner      = "#{ billing.first_name[0] } #{ billing.last_name[0] }"
      @cardType   = billing.card_type[0]
      @cardNumber = "#{ billing.last_four }"
