filterNils = (obj) ->
  for own key, val of obj
    obj[key] = filterNils val  if val? and 'object' is typeof val

  if obj?[0]?.$?.nil?
  then [ null ]
  else obj

ifString = (str)-> if typeof str is 'string' then str else ''

class exports.Error
  # Recurly's error entry structure. I'll use the same structure
  # for socket/http errors.
  constructor: (@short = '', @message = '', @field = '') ->

class exports.Account
  #
  # ACCOUNTS and BILLING INFO
  # See https://docs.recurly.com/api/accounts for XML format
  #
  constructor: (f) ->
    from = filterNils f
    @firstName  = from.first_name[0]
    @lastName   = from.last_name[0]
    @email      = from.email[0]
    @username   = from.username[0]
    # TODO: move the configuration out of the code:
    @url        = "https://koding.recurly.com/account/#{ from.hosted_login_token[0] }"
    @billing    = billing

class exports.Adjustment
  #
  # ADJUSTMENTS (ONE-TIME CHARGE/CREDIT TO SUBSCRIPTION)
  # See https://docs.recurly.com/api/invoices for XML format
  #
  constructor: (f) ->
    from = filterNils f
    @uuid         = from.uuid[0]
    @amount       = from.total_in_cents[0]._
    @currency     = from.currency[0]
    @description  = if from.description[0].$ then '' else from.description[0]
    @type         = from.$.type
    @origin       = from.origin[0]

class exports.Billing
  #
  # ACCOUNTS and BILLING INFO
  # See https://docs.recurly.com/api/accounts for XML format
  #
  constructor: (f) ->
    from = filterNils f
    @cardFirstName  = from.first_name[0]
    @cardLastName   = from.last_name[0]
    @cardNumber     = Array(13).join('*') + from.last_four
    @cardMonth      = from.month[0]._
    @cardYear       = from.year[0]._
    @cardCV         = '***'
    @cardType       = from.card_type[0]
    @address1       = from.address1[0]
    @address2       = ifString from.address2[0]
    @city           = ifString from.city[0]
    @state          = ifString from.state[0]
    @zip            = from.zip[0]
    @country        = from.country[0]
    @company        = from.company[0]
    @vatNumber      = from.vat_number[0]
    @phone          = from.phone[0]

class exports.Invoice
  #
  # INVOICES
  # See https://docs.recurly.com/api/invoices for XML format
  #
  constructor: (f) ->
    from = filterNils f
    @uuid     = i.uuid[0]
    @amount   = i.total_in_cents[0]._
    @currency = i.currency[0]
    @state    = i.state[0]

class exports.Plan
  #
  # PLANS
  # See https://docs.recurly.com/api/plans for documentation
  #
  constructor: (f) ->
    from = filterNils f
    @title        = from.name[0]
    @code         = from.plan_code[0]
    @desc         = ifString from.description[0]
    @feeMonthly   = parseInt from.unit_amount_in_cents[0]['USD'][0]._, 10
    @feeInitial   = parseInt from.setup_fee_in_cents[0]['USD'][0]._, 10
    @feeInterval  = parseInt from.plan_interval_length[0]._, 10

class exports.Subscription
  #
  # SUBSCRIPTIONS
  # See https://docs.recurly.com/api/subscriptions for documentation
  #
  constructor: (f) ->
    from = filterNils f
    @plan     = from.plan[0].plan_code[0]
    @quantity = from.quantity[0]._
    @uuid     = from.uuid[0]
    @currency = from.currency[0]
    @status   = from.state[0]
    @datetime = from.activated_at[0]._
    @expires  = from.expires_at[0]._
    @renew    = from.current_period_ends_at[0]._
    @amount   = from.unit_amount_in_cents[0]._

    if from.pending_subscription
      @pending =
        plan      : from.pending_subscription[0].plan[0].plan_code[0]
        quantity  : from.pending_subscription[0].quantity[0]._

class exports.Transaction
  #
  # TRANSACTIONS
  # See https://docs.recurly.com/api/transactions for documentation
  #
  constructor: (f) ->
    from = filterNils f
    @uuid       = from.uuid[0]
    @status     = from.status[0]
    @amount     = parseInt from.amount_in_cents[0]._, 10
    @tax        = parseInt from.tax_in_cents[0]._, 10
    @currency   = from.currency[0]
    @datetime   = from.created_at[0]._
    @refundable = from.refundable[0]._
    @source     = from.source[0]

    @invoice    = from.invoice[0].$.href  if from.invoice

    if @status in ['success', 'void']
      billing     = from.details[0].account[0].billing_info[0]
      @owner      = "#{ billing.first_name[0] } #{ billing.last_name[0] }"
      @cardType   = billing.card_type[0]
      @cardNumber = "#{ billing.last_four }"
