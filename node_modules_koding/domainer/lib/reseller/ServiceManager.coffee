request = require 'request'
{EventEmitter}  = require 'events'

# i'd rather change this name
# this is basically our ResellerAPI
# and the name ServiceManager is too generic.

# module.exports = class ResellerAPI extends EventEmitter
module.exports = class ServiceManager extends EventEmitter

  resellerMainURL = "https://test.httpapi.com/api"

  constructor:(authUserId, apiKey)->

    # Move these to config ~ GG

    # Prod Credentials
    # @authUserId  = "482303"
    # @apiKey      = "7BbJHmTm3pabFOlMPt8KdpJy28qoeeXT"

    # Test Credentials
    @apiKey        = "FEnIauBXwnihV6LQRbaxgkvYjCJta6lK"
    @authUserId    = "494563"

  # and this would just be request based on above proposal.
  makeSuggestionRequestToDomainr: (domainName, callback)->
    request "https://domai.nr/api/json/search?q=#{encodeURI domainName}", (err, response, body) =>
      suggestionResponse = JSON.parse(body)
      return callback err, suggestionResponse

  # request:(options, callback)->
  makeRequestToResellerApi:(options, callback)->
    paramsToAdd = ""

    for key,value of options.parameters
      if Array.isArray value
        for i,paramValue of value
          paramsToAdd += "&#{key}=#{paramValue}"
      else
        paramsToAdd += "&#{key}=#{value}"

    reqUri = "#{resellerMainURL}/"              +
             "#{options.service}/"              +
             "#{options.action}."               +
             "json?auth-userid=#{@authUserId}&" +
             "api-key=#{@apiKey}"               +
             "#{paramsToAdd}"

    console.log "Requesting:", reqUri

    request
      method  : options.requestMethod or 'GET'
      uri     : reqUri
    , (err, res, body)=>
      @_handleResponse callback, err, res, body

  _handleResponse:(callback, error, response, body)->
    if error
      console.log "ERROR", error
      return callback error

    responseBody = JSON.parse body
    {status, message, error, msg} = responseBody

    if status and status.toLowerCase() in ["error", "failed"]
      errorMsg = if message then message
      else if error then error
      else msg

      return callback errorMsg

    callback null, responseBody
