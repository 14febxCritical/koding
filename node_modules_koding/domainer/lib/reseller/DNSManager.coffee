request = require 'request'
ServiceManager = require './ServiceManager'

module.exports = class DNSManager extends ServiceManager

  constructor:->
    @recordTypes = ["A", "CNAME", "MX", "TXT", "NS", "SRV", "AAAA"]
    super

  createDNSRecord:(params, callback)->
    recordType = params.recordType.toLowerCase()
    if recordType is 'a'
      recordType = 'ipv4' # TODO: this can be ipv6 as well

    options =
      requestMethod : 'POST'
      service       : "dns/manage"
      action        : "add-#{recordType}-record"
      headers       : {'content-type': 'application/json'}
      parameters:
        "domain-name" : params.domainName
        value         : params.value
        host          : params.host

    if params.priority?
      options.parameters.priority = params.priority

    @makeRequestToResellerApi options, (err, result)-> callback err, result

  fetchDNSRecords:(params, callback)->
    options =
      service : "dns/manage"
      action  : "search-records"
      parameters:
        "domain-name"   : params.domainName
        "no-of-records" : 100

    recordList = {}

    for recordType in @recordTypes
      options.type = recordType

      @makeRequestToResellerApi options, (err, records)->
        return callback err if err
        recordList[recordType] = records

      callback null, recordList
