request = require 'request'
ServiceManager = require './ServiceManager'

module.exports = class DNSManager extends ServiceManager

  constructor:->
    @recordTypes = ["A", "CNAME", "MX", "TXT", "NS", "SRV", "AAAA"]
    super

  createDNSRecord:(params, callback)->
    recordType = params.recordType.toLowerCase()
    if recordType is 'a'
      recordType = 'ipv4' # TODO: this can be ipv6 as well

    options =
      requestMethod : 'POST'
      service       : "dns/manage"
      action        : "add-#{recordType}-record"
      parameters:
        "domain-name" : params.domainName
        value         : params.value
        host          : params.host
        ttl           : params.ttl

    if params.priority?
      options.parameters.priority = params.priority

    @makeRequestToResellerApi options, (err, result)-> callback err, result

  fetchDNSRecords:(params, callback)->
    options =
      service : "dns/manage"
      action  : "search-records"
      parameters:
        "domain-name"   : params.domainName
        "no-of-records" : 50
        "page-no"       : 1
        type            : params.recordType

    @makeRequestToResellerApi options, (err, records)->
      return callback err if err
      callback null, records

  deleteDNSRecord:(params, callback)->
    recordType = params.recordType.toLowerCase()
    if recordType is 'a'
      recordType = 'ipv4' # TODO: this can be ipv6 as well

    options =
      requestMethod : 'POST'
      service       : "dns/manage"
      action        : "delete-#{recordType}-record"
      parameters:
        "domain-name" : params.domainName
        value         : params.value.toLowerCase()
        host          : params.host

    @makeRequestToResellerApi options, (err, result)-> callback err, result

  updateDNSRecord:(params, callback)->
    recordType = params.oldData.recordType.toLowerCase()
    if recordType is 'a'
      recordType = 'ipv4' # TODO: this can be ipv6 as well

    options =
      requestMethod : 'POST'
      service       : "dns/manage"
      action        : "update-#{recordType}-record"
      parameters:
        "current-value" : params.oldData.value.toLowerCase()
        "new-value"     : params.newData.value
        "domain-name"   : params.domainName
        "host"          : params.oldData.host

    @makeRequestToResellerApi options, (err, result)-> callback err, result