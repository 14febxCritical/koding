fs            = require 'fs'
csv           = require 'csv'
nodePath      = require 'path'
{Stream}      = require 'stream'
{MongoClient} = require 'mongodb'
{daisy}       = require 'sinkrow'


fetchDb = (mongo, callback) ->
  throw new Error 'need a mongo connection'  unless mongo

  if 'string' is typeof mongo
    MongoClient.connect 'mongodb://localhost/test', callback
  else
    process.nextTick -> callback null, mongo


module.exports = (options) ->
  { path, mongo, collectionName, encoding, dropFirst, delimiter } = options

  path      ?= nodePath.join __dirname, '../db/allCountries.txt'#'../db/zips.csv'
  delimiter ?= '\t'
  encoding  ?= 'utf-8'
  dropFirst ?= yes

  stream = new Stream

  stream.end = -> stream.emit 'end'

  fetchDb mongo, (err, db) ->
    return stream.emit 'error', err  if err

    collection = db.collection collectionName

    queue = []

    if dropFirst
      queue.push -> collection.drop -> queue.next()

    queue.push ->
      csv()
        .from.path(path, { delimiter, encoding })
        .to.stream(stream)
        .on( 'record', (row, i) ->

          [
            countryCode
            zip
            city
            state
            stateCode
            county
          ] = row

          doc = {
            zip
            city
            county
            state
            stateCode
            countryCode
          }

          collection.insert doc, (err) ->
            return stream.emit 'error', err  if err
        )
        .on 'close', -> queue.next()

    queue.push ->
      collection.createIndex 'zip'

    daisy queue

  return stream
