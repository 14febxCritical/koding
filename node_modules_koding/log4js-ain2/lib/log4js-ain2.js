var log4js = require('log4js')
var SysLogger = require('ain2');
var syslog = require("posix-syslog");

// From ain2 file
var Severity = {
    emerg:  0,
    alert:  1,
    crit:   2,
    err:    3,
    warn:   4,
    notice: 5,
    info:   6,
    debug:  7
};

var masks = {
  0: 'emerg',
  1: 'alert',
  2: 'crit',
  3: 'err',
  4: 'warning',
  5: 'noticee',
  6: 'info',
  7: 'debug'
};

var levels = {}
levels[log4js.levels.ALL] = Severity['debug'];
levels[log4js.levels.TRACE] = Severity['debug'];
levels[log4js.levels.DEBUG] = Severity['debug'];
levels[log4js.levels.INFO] = Severity['info'];
levels[log4js.levels.WARN] = Severity['warn'];
levels[log4js.levels.ERROR] = Severity['err'];
levels[log4js.levels.FATAL] = Severity['crit'];

var masks = {
  0: 'emerg',
  1: 'alert',
  2: 'crit',
  3: 'err',
  4: 'warning',
  5: 'notice',
  6: 'info',
  7: 'debug'
};

function getSyslogLevel(level) {
	var levelNumber = level && levels[level] ? levels[level] : levels[log4js.levels.ERROR];
  return masks[levelNumber]
}

/**
* SYSLOG appender
*
*
* @param config appender configuration data
* @param layout a function that takes a logevent and returns a string (defaults to basicLayout).
*/
function syslogAin2Appender(config, layout) {

	var ourLayout = function (loggingEvent) {
		var level = getSyslogLevel(loggingEvent.level)

		e = loggingEvent;
		e.data = "[" + level.toUpperCase() + "] - " + e.data;

	  return log4js.layouts.messagePassThroughLayout(e);
	}

	var layout = ourLayout;

  var name = config.tag || "log4js"
  syslog.open(name, {}, config.facility);

	return function(loggingEvent) {
    //console.log(getSyslogLevel(loggingEvent.level))
		//syslog.crit(layout(loggingEvent), getSyslogLevel(loggingEvent.level))
		//console.log(syslog[getSyslogLevel(loggingEvent.level)](layout(loggingEvent)))
    //console.log(masks[loggingEvent.level])

		var fn = syslog[getSyslogLevel(loggingEvent.level)];
    if (fn) fn(layout(loggingEvent));
	};
}

function configure(config, options) {
	var layout;
	if (config.layout) {
		layout = layouts.layout(config.layout.type, config.layout);
	}
	return syslogAin2Appender(config, layout);
}

exports.name = "log4js-ain2";
exports.appender = syslogAin2Appender;
exports.configure = configure;

