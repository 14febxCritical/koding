# https://github.com/mikeal/morestreams/blob/master/main.js
# This was extracted from the above and ported to coffeescript using js2coffee,
# and then trimmed down a bit by hand, for readability and beauty.

{Stream} = require "stream"

module.exports = class BufferedStream extends Stream

  constructor:(@limit) ->
    limit = Infinity  if typeof limit is "undefined"
    @size = 0
    @chunks = []
    @writable = true
    @readable = true

  pipe:(dest, options) ->
    @resume()  if @resume
    super
    
    #just incase you are piping to two streams, do not emit data twice.
    #note: you can pipe twice, but you need to pipe both streams in the same tick.
    #(this is normal for streams)
    return dest  if @piped
    process.nextTick =>
      @chunks.forEach (c) =>
        @emit "data", c

      @size = 0
      delete @chunks

      @emit "end"  if @ended

    @piped = true
    dest

  write:(chunk) ->
    unless @chunks
      @emit "data", chunk
      return
    @chunks.push chunk
    @size += chunk.length
    @pause()  if @limit < @size

  end:->
    unless @chunks
      @emit "end"
    else
      @ended = true

  unless Stream::pause
    pause:-> @emit "pause"
  
  unless Stream::resume
    resume:-> @emit "resume"