http = require 'http'
crypto = require 'crypto'

apiGet = (method, arguments, callback) ->
  options =
    host: 'web0.dev.system.aws.koding.com'
    port: 15672
    auth: 'kite-manager:Zwh4IGCDHfqE1MQ'
    path: '/api/' + method
    method: 'GET'

  req = http.request options, (res) ->
    res.setEncoding 'utf8'
    res.on 'data', (chunk) ->
      callback null, chunk

  req.on 'error', (e) ->
    callback e, null

  req.end()

apiSet = (method, arguments, callback) ->
  options =
    host: 'web0.dev.system.aws.koding.com'
    port: 15672
    auth: 'kite-manager:Zwh4IGCDHfqE1MQ'
    path: '/api/' + method
    method: 'PUT'
    headers: {'content-type': 'application/json'}

  req = http.request options, (res) ->
    res.setEncoding 'utf8'
    callback null, {}

  req.on 'error', (e) ->
    console.log e
    callback e, null

  req.write JSON.stringify arguments
  req.end()

newUser = (key, secret, kiteName, callback) ->
  crypto.randomBytes 12, (ex, buf) ->
    username = "kite-api-" + key
    password = buf.toString 'hex'
    vhost    = '%2F'

    args =
      password : password
      tags     : ''

    apiSet "users/#{username}", args, (err, data) ->
      if err
        callback err, {}
      else
        args2 =
          configure : "^(amq\.gen.*|amq\.default|services-presence|broker|kite-#{kiteName}-.*)$"
          write     : "^(amq\.gen.*|amq\.default|services-presence|broker|kite-#{kiteName}-.*)$"
          read      : "^(amq\.gen.*|amq\.default|services-presence|broker|kite-#{kiteName}-.*)$"
        apiSet "permissions/#{vhost}/#{username}", args2, (err2, data2) ->
          if err2
            callback err2, {}
          else
            callback null, {username: username, password: password}

rabbitAPI = 
  newUser: newUser

module.exports = rabbitAPI