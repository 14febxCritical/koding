{ argv }  = require 'optimist'
KONFIG    = require('./../../koding-config-manager').load("main.#{argv.c}")
os        = require 'os'
DogStatsD = require './dogstatsd'
Timer     = require './timer'

module.exports = class MetricsBase

  @timer : Timer


  @commonTagList : {

    process : [
      'cwd'
      'pid'
      'argv'
      'title'
      'getuid'
      'getgid'
      'version'
      'platform'
      'execPath'
    ]

    os : [
      'type'
      'release'
      'hostname'
    ]

  }


  @populateCommonTags : (tags) ->

    tags ?= []
    tags.push "version:#{KONFIG.version}"

    for key, value of @commonTagList
      for prop in value
        tagName  = "#{key}.#{prop}"
        tagValue = ''

        source = switch
          when key is 'process'  then process
          when key is 'os'       then os

        tagValue = switch
          when not source[prop]                   then 0
          when Array.isArray source[prop]         then source[prop].join()
          when typeof source[prop] is 'function'  then source[prop]()
          else                                         source[prop]

        tagValue = @sanitizeTagValue tagValue
        tags.push "#{tagName}:#{tagValue}"

    return tags


  @sanitizeTagValue : (tagValue) ->

    tagValue = JSON.stringify tagValue  unless typeof tagValue is 'string'

    tagValue = tagValue.replace /[^A-Za-z0-9_]+/g, '_'

    return tagValue


  @sanitizeMetricName :(metricName) ->

    return metricName
      .replace /[:?]/g,               '_' # replace : and ? with _
      .replace /[^A-Za-z0-9_\. ]+/g,  ''  # remove invalid characters


  @sendMetrics : (metricsList, metricName, tags) ->
    metricName = @sanitizeMetricName metricName

    dogStatsDClient = DogStatsD.getClient()

    for metricMethod, value of metricsList
      for metricSuffix, metricValue of metricsList[metricMethod]
        dogStatsDClient[metricMethod] "#{metricName}.#{metricSuffix}", metricValue, tags


