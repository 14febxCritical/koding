getRandomInt = (min, max) ->
    return Math.floor(Math.random() * (max - min + 1)) + min

getRandom3DigitPrime = ->
  primes = [127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229]
  return primes[getRandomInt(0,primes.length-1)]

module.exports = 
  start : (options) ->
    {interval,name} = options

    unless process.send 
      console.log "[#{name.toUpperCase()}][WARN] Process is not forked, parent communication will not be possible." 
    else
      process.send?({name :name, alive: yes})

    setInterval ->
      # communicating to parent supervisor
      data =
        "process-monitor" : yes
        name   : name
        mem    : 
          rss       : Math.floor((process.memoryUsage().rss)/(1024*1024))
          heapTotal : Math.floor((process.memoryUsage().heapTotal)/(1024*1024))
          heapUsed  : Math.floor((process.memoryUsage().heapUsed)/(1024*1024))
          unit      : 'MB'            
        uptime : process.uptime()
      
      process.send? data

      if options.limits?.memory < data.mem.rss
        options.limits.callback name,"Excess Memory usage",data
      
      # StatsD
      if options.statsd?.run
        os = require "os"
        # Memory Usage
        options.statsd.instance.gauge('memory.' + options.statsd_id, data.mem.rss)

      if options.mixpanel
        Mixpanel = require 'mixpanel'
        os = require "os"
        mixpanel = Mixpanel.init options.mixpanel?.key
        mixpanel.track "process-monitor",
          distinct_id: name
          memory  : data.mem.rss
          host    : os.hostname()
          loadAvg : os.loadavg()


      if options.die?.after
        if "string" is typeof options.die.after
          a = getRandom3DigitPrime()
          options.die.after = (a*1000)*60
          console.log "[PROCESS-MONITOR][#{name}] is assigned a non-overlapping lifetime. (#{a} mins)"
        setTimeout ->
          if "function" is typeof options.die.middleware
            if options.die.middlewareTimeout
              setTimeout ->
                console.log "[PROCESS-MONITOR][#{name}] die.middleware didn't return the callback within #{options.die.middlewareTimeout} it will die now."
                process.exit()
              ,options.die.middlewareTimeout
            options.die.middleware name,(err,res)->

              process.exit()
          else
            process.exit()
        ,options.die.after


    ,interval ? 1000 
      
