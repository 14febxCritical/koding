module.exports = 
  start : (options) ->
    {interval,name} = options
      
    unless process.send then console.log "[#{name.toUpperCase()}][WARN] Process is not forked, parent communication will not be possible." 

    setInterval ->
      # communicating to parent supervisor
      data =
        "process-monitor" : yes
        name   : name
        mem    : 
          rss       : Math.floor((process.memoryUsage().rss)/(1024*1024))
          heapTotal : Math.floor((process.memoryUsage().heapTotal)/(1024*1024))
          heapUsed  : Math.floor((process.memoryUsage().heapUsed)/(1024*1024))
          unit      : 'MB'            
        uptime : process.uptime()
      
      process.send? data

      if options.limits?.memory < data.mem.rss
        options.limits.callback name,"Excess Memory usage",data

      if options.die?.after
        setTimeout ->
          if "function" is typeof options.die.middleware
            if options.die.middlewareTimeout
              setTimeout ->
                console.log "[PROCESS-MONITOR][#{NAME}] die.middleware didn't return the callback within #{options.die.middlewareTimeout} it will die now."
                process.exit()
              ,options.die.middlewareTimeout
            options.die.middleware name,(err,res)->

              process.exit()
          else
            process.exit()
        ,options.die.after


    ,interval ? 1000 
      
