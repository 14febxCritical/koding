Promise = require 'bluebird'
generateSprites = Promise.promisify require 'node-sprite-generator'
fs = Promise.promisifyAll require 'fs'

createStylusHelper = require './stylus-helper.coffee'

{ join: joinPath } = require 'path'

module.exports = (options, callback) ->
  options.retinaRe ?= /@2x$/
  options.compositor ?= 'gm'

  dir = joinPath process.cwd(), options.path

  fs.readdirAsync dir
    .bind layouts: {}
    .map (item) -> joinPath dir, item
    .filter (spritePath) ->
      (fs.statAsync spritePath).then (stats) -> stats.isDirectory()
    .map (spritePath) ->
      generateSprites
        compositor  : options.compositor
        src         : ["#{ spritePath }/*.png"]
        spritePath  : "#{ spritePath }.sprite.png"
        pixelRatio  : if options.retinaRe.test spritePath then 2 else 1
        stylesheet  : (require './stylus-handler.coffee').bind this
    .then -> createStylusHelper @layouts, options
    .nodeify callback
