{ promisify, promisifyAll } = require 'bluebird'
generateSprites = promisify require 'node-sprite-generator'
fs = promisifyAll require 'fs'
{ join: joinPath } = require 'path'

createStylusHelper = require './stylus-helper.coffee'
stylusHandler = require './stylus-handler.coffee'

module.exports = (options, callback) ->
  options.retinaRe ?= /@2x$/

  dir = joinPath process.cwd(), options.path

  fs.readdirAsync dir
    .map (item) -> joinPath dir, item
    .filter (path) ->
      (fs.statAsync path).then (stats) -> stats.isDirectory()
    .bind {}
    .map (path) ->
      isRetina = options.retinaRe.test path
      generateSprites
        src           : ["#{ path }/*.png"]
        spritePath    : "#{ path }.sprite.png"
        layoutOptions : { padding: 1 }
        stylesheet    : stylusHandler.bind this, isRetina
    .then -> createStylusHelper this, options
    .nodeify callback
