{EventEmitter} = require 'microemitter'
http = require 'http'
Kite = require './index'

module.exports = class KiteBase extends EventEmitter

  __createAmqpConfig = (res) ->

    config =
      amqp          :
        port        : 5672
        protocol    : "amqp:"
        vhost       : '/'
        heartbeat   : 10

        
    config.amqp.port      = res.port if res?.port?
    config.amqp.host      = res.host if res?.host?
    config.amqp.protocol  = res.protocol if res?.protocol?
    config.amqp.login     = res.username if res?.username?
    config.amqp.password  = res.password if res?.password?
    config.amqp.vhost     = res.vhost if res?.vhost?
    config.amqp.heartbeat = res.heartbeat if res?.heartbeat?

    return config

  constructor:(config, functions)->
    
    url = "#{config.apiAdress}/-/kite/login?key=#{config.key}&secret=#{config.secret}"

    http.get url, (res) =>
      unless res.statusCode == 200
        console.log 'You can not start this Kite'
        return

      res.on "data", (chunk) =>
        data = JSON.parse chunk.toString()

        @config = __createAmqpConfig data 
        console.log 'Kite has started'

        @kite =  new Kite config.name, functions
        @kite.run @config

      res.on "error", (e) ->
        console.log "Cannot start Kite #{e.message}"