# this is just an example for a client
{kite, KiteEventListener} = require 'koding-kite'
sleep = kite.utils.sleep

kite.main ()->

  options = new kite.Options
                  kitename:    "application"
                  version:     "0.0.1"
                  port:        9998
                  region:      "localhost"
                  environment: "development"
                  username:    "devrim"

  k = kite.New options
  k.run()

  query = new kite.KontrolQuery
                username:    "devrim"
                environment: "development"
                name:        "mathworker"

  # To demonstrate we can receive notifications matcing to our query.
  onEvent = ()->
    console.log "--- kite event: ", arguments

  k.Kontrol.watchKites query, onEvent

  [err, kites] = k.Kontrol.getKites query

  if err isnt null
    console.error "error", err
    return

  if kites.length is 0
    console.error "No mathworker available"
    return

  mathWorker = kites[0]
  err = mathWorker.dial()

  squareOf = (i)->
    [r, err] = mathWorker.tell "square", i
    if err
      console.error "we received an error from mathWorker #{err}"
    else
      console.log "square of #{i} is #{r.args[1]}"

  loop
    squareOf(1234)
    sleep(1000)