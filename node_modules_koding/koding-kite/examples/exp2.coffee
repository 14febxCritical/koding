# this is just an example for a client
{Client} = require 'koding-kite'

# sample of a client exposing functions to worker
class MathClient extends Client
  log: ()->
    console.log "log function called"

k = new Client
k.on 'connected', ()->
    console.log "connected to kontrol...."
    k.getKites {name:"mathworker", username:"devrim"}, (err, kites)->
      throw "Error while getting kite list #{err}" if err
      throw "no available kite worker" if not Array.isArray(kites) or kites.length == 0

      # connecting to first avail kite
      kite = kites[0]
      url = "ws://#{kite.kite.publicIP}:#{kite.kite.port}/dnode"
      console.log "connecting to:", url
      # now we connect to kite worker..
      authentication = type: 'token', key: kite.token

      mathworker = new MathClient username: "devrim", url: url
      mathworker.on 'connected', ()->
        setInterval ()->
          value = Math.random() * 100
          console.log "sending #{value} to mathworker"
          mathworker.callRemote "square", value, authentication, (err, data)->
            console.log "response from mathworker", err, data
        , 5000
      mathworker.connect()
k.connect()