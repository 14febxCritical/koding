# this is just an example for a client
{kite, KiteEventListener} = require 'koding-kite'

eventListener = new KiteEventListener
eventListener.on "REGISTER", (kite)->
  console.log "received kite event register", kite

eventListener.on "DEREGISTER", (kite)->
  console.log "received kite event deregister", kite

kite.main ()->

  options = new kite.Options {
                  Kitename:    "application",
                  Version:     "0.0.1",
                  Port:        9998,
                  Region:      "localhost",
                  Environment: "development",
                  Username:    "devrim",
          }

  k = kite.New options
  k.Run()

  query = new kite.KontrolQuery {
    Username:    "devrim",
    Environment: "development",
    Name:        "mathworker",
  }

  [err, kites] = k.Kontrol.GetKites query, eventListener

  if err isnt null
    console.error err
    return

  if kites.length is 0
    console.error "No mathworker available"
    return

  mathWorker = kites[0]
  err = mathWorker.Dial()

  squareOf = (i)->
    [r, err] = mathWorker.Call "square", i
    if err
      console.error "we received an error from mathWorker #{err}"
    else
      console.log "square of #{i} is #{r.Args[1]}"
  squareOf(1234)


