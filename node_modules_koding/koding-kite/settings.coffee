fs = require 'fs'
os = require 'os'
path = require 'path'
{env} = process

module.exports = class Settings
# we use this to setup options for running kite workers/clients
# for different setups, eg: getting kontrol address from a database etc,
# extend this class and give it as an option to worker/client
  constructor: (@options={})->
    @basePath = path.join env.HOME || env.HOMEPATH || env.USERPROFILE, ".kd"
    @options.username       or= env.USER
    @options.version        or= "0.0.1"
    @options.environment    or= "development"
    @options.region         or= "localhost"
    @options.kontrolAddress or= 'wss://127.0.0.1:4000/dnode'
    #
    @_kodingKey = null

  kodingKey: ()->
    if not @_kodingKey
      @_kodingKey = @readKeyFile()
    return @_kodingKey

  readKeyFile: ()->
    kodingKey = fs.readFileSync path.join @basePath, "koding.key"
    kodingKey.toString().replace(/\n$/, '')

  userName: -> @options.username
  hostname: -> os.hostname()
  version: ->  @options.version
  environment: -> @options.environment
  region: -> @options.region
  kontrolAddress: -> @options.kontrolAddress
