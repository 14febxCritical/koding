falafel = require 'falafel'
coffee = require 'coffee-script'
fs = require 'fs'

yoyo = "{{> @test}}"
bibi = """
{{#(funky) or "test")}}
"""

pistachio =
	"""
	<div class="profileleft">
	  <span>
	    <a class='profile-avatar' href='#'>{{#(image) or "upload an image"}}</a>
	  </span>
	  {{> @followButton}}
	</div>

	<section>
	  <div class="profileinfo">
	    {h3{#(title)}}

	    <div class="profilestats">
	      <div class="posts">
			<a href='#'><cite/>{{@utils.formatPlural #(counts.post), 'Post'}}</a>
	      </div>
	      <div class="fers">
	        <a href='#'><cite/>{{@utils.formatPlural #(counts.followers), 'Follower'}}</a>
	      </div>
	    </div>
	  </div>

	  <div class='profilebio'>
	    {p{#(body)}}
	  </div>

	  <div class="skilltags">
	  </div>

	</section>
	"""

kaka = "\"happy halloween\""

cunilingus = '"happy m/fing ha.lowwerrn, mfr"'

__src = coffee.compile fs.readFileSync('./testo.coffee','utf-8'), bare:yes

spells = do->
	chars = []
	spells = (words, ch)->
		chars.push ch
		foundWord = null
		words.forEach (word)-> foundWord = word if word is chars.slice(-word.length).join ''
		return foundWord
	spells.reset =-> chars.length = 0
	spells

module.exports = (src=__src)->
	falafel src, (node)->
		if node.parent?.left?.name in ["yoyo","bibi","pistachio","kaka","cunilingus"]
			[].forEach.call node.source(), (ch)->
				console.log ch
				word = spells ['upload','Post'], ch
				console.log word, '<<<<---- a word was found' if word?
	spells.reset()