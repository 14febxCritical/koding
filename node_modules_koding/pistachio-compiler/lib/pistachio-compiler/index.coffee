falafel = require 'falafel'
{argv} = require 'optimist'

compile =require './compile'

compileAll =(source)->
  falafel source, (node)->
    if node.type is 'Literal'
      node.update compile node.source()

isMagicProperty =(node)->
  node.type is 'Property' and node.key.name is magicWord

isMagicMember =(node)->
  node.type is 'AssignmentExpression' and\
  node.left.type is 'MemberExpression' and\
  node.left.property.name is magicWord

isMagicIdentifier =(node)->
  isAssignmentExpression and\
  node.left.type is 'Identifier' and\
  node.left.name is magicWord

module.exports =(src, magicWord="pistachio")->
  falafel src, (node)->
    if isMagicProperty(node) or isMagicMember(node) or isMagicIdentifier(node)
      node.update compileAll node.source()