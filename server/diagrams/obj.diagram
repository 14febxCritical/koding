requester->server:job
activate server
server->boss:start(kodingenUsername)
activate boss
boss->team:createInstance()
activate team
boss->team:addWorkers()
server->boss:addJobToQueue(job)
boss->jobq:addJobToQueue(job)
activate jobq
server->requester:jobId
deactivate server

loop startDelegating()
 boss->jobq:getNextAvailableJob()
 boss->team:getNextAvailableWorker()
 boss->job:start()
 activate job
 boss->boss:assignJob(worker,job)
 boss->job:assignTo(worker)    
 boss->worker:do(job)
 activate worker
end

worker->worker:startWorking(job)
worker->api:exec[class,function,data]
activate api
api->[class]:[function](data)
activate [class]
[class]->api:completed(result)
deactivate [class]
api->worker:jobComplete(result)
deactivate api
worker->boss:jobComplete(result)        
boss->job:markAsComplete(job)
deactivate job
boss->worker:available(true)
deactivate worker

requester->server:status(id)
activate server
server->boss:getJob(id)
boss->jobq:getJob(id)
boss->server:job
server->requester:jobStatus
deactivate server