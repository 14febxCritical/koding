worker_processes 1;
master_process off;


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;



events {
  worker_connections  1024;
  multi_accept on;
  use kqueue;
}

# start http
http {

  access_log off;

  # log how long requests take
  log_format timed_combined 'RA: $remote_addr H: $host R: "$request" S: $status RS: $body_bytes_sent R: "$http_referer" UA: "$http_user_agent" RT: $request_time URT: $upstream_response_time';
  

  proxy_buffer_size  128k; # default 8k;
  proxy_buffers   4 256k; # default 8 8k;
  proxy_busy_buffers_size   256k; # default 16k;

  # batch response body
  client_body_in_single_buffer on;
  client_header_buffer_size 4k;
  client_max_body_size 10m;

  client_body_temp_path /tmp;

  sendfile on;

  # for proper content type setting, include mime.types
  include /usr/local/etc/nginx/mime.types;

  # add global upstreams
  upstream gowebserver {
	server 127.0.0.1:6500 max_fails=3 fail_timeout=10s;
  }

  upstream kontrol {
	server 127.0.0.1:3000 max_fails=3 fail_timeout=10s;
  }

  upstream kloud {
	server 127.0.0.1:5500 max_fails=3 fail_timeout=10s;
  }

  upstream broker {
	server 127.0.0.1:8008 max_fails=3 fail_timeout=10s;
  }

  upstream sourcemaps {
	server 127.0.0.1:3526 max_fails=3 fail_timeout=10s;
  }

  upstream webserver {
	server 127.0.0.1:8080 max_fails=3 fail_timeout=10s;
  }

  upstream socialworker {
	server 127.0.0.1:3030 max_fails=3 fail_timeout=10s;
  }

  upstream paymentwebhook {
	server 127.0.0.1:6600 max_fails=3 fail_timeout=10s;
  }

  upstream vmwatcher {
	server 127.0.0.1:6400 max_fails=3 fail_timeout=10s;
  }

  upstream socialapi {
	server 127.0.0.1:7000 max_fails=3 fail_timeout=10s;
  }

  upstream gatekeeper {
	server 127.0.0.1:7200 max_fails=3 fail_timeout=10s;
  }

  upstream gatheringestor {
	server 127.0.0.1:6800 max_fails=3 fail_timeout=10s;
  }

  upstream integration {
	server 127.0.0.1:7300 max_fails=3 fail_timeout=10s;
  }

  upstream webhook {
	server 127.0.0.1:7350 max_fails=3 fail_timeout=10s;
  }

  upstream tunnelserver {
	server 127.0.0.1:80 max_fails=3 fail_timeout=10s;
  }



  # we're in the http context here
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  gzip on;
  gzip_disable "msie6";
  gzip_static on;

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg image/jpg image/png;

  			
  # listen for http requests at port 81
  # this port will be only used for http->https redirection
  #
  # do not forget to allow communication via port 81 at security groups(ELB SecGroup)
  # like : koding-latest,
  server {
    # just a random port

    listen 8091;

    # use generic names, do not hardcode values
    return 301 https://$host$request_uri;
  }

  

  # start server
  server {
    # we should not timeout on proxy connections
    # close alive connections after 20 seconds # http://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
 		keepalive_timeout 20s;

    # do not add hostname here!
    #
    # ELB listens on 80+443 and proxies those
    # requests to our instance, our instance listens on port 79
    #
    # There is another service listening on 80, tunnelserver, that one is
    # reached from outside directly, not over ELB
    #

    listen 8090;

    

    # root /usr/share/nginx/html;
    index index.html index.htm;
    location = /healthcheck {
      return 200;
      access_log off;
    }

    location @assets {
      proxy_pass            http://s3.amazonaws.com/koding-assets$uri;
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout 1;

      resolver 8.8.8.8;
    }

    # no need to send static file serving requests to webserver
    # serve static content from nginx
    location /a/ {

      

      root /Users/ezgikesler/Desktop/koding/website/;
      try_files $uri @assets;
      # no need to send those requests to nginx access_log
      access_log off;
    }

    

    # special case for ELB here, for now
    location /-/healthCheck {
      proxy_pass            http://webserver;
      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_next_upstream   error timeout   invalid_header http_500;
      proxy_connect_timeout 1;
    }

    # redirect /d/* to koding-dl S3 bucket; used to distributed
    # // kd/klient installers
    location ~^/d/(.*)$ {
      proxy_pass            "https://s3.amazonaws.com/koding-dl/$1";
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout 1;

      resolver 8.8.8.8;
    }

    # redirect /d/kd to KD installer for development channel
    location /c/d/kd {
      proxy_pass            "https://s3.amazonaws.com/koding-kd/development/install-kd.sh";
      proxy_set_header      X-Host          $host;
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout 1;

      resolver 8.8.8.8;
    }

    # redirect /p/kd to KD installer for production channel
    location /c/p/kd {
      proxy_pass            "https://s3.amazonaws.com/koding-kd/production/install-kd.sh";
      proxy_set_header      X-Host          $host;
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout 1;

      resolver 8.8.8.8;
    }

    # Hackathon2014 is the old hackathon page and served via webserver
    # todo(cihangir) remove after hubspot integration
    location = /Hackathon2014 {
      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      resolver 8.8.8.8;
      proxy_connect_timeout 10;
      proxy_pass http://webserver;
    }

    location ~ ^/(blog|docs)(.*) {
      return 301 https://www.koding.com/$1$2$is_args$args;
    }

    # mac and windows are case insensitive, redirect lowercased hackathon to
    # Uppercase Hackathon
    location ~ "(?-i)/hackathon" {
      return 301 /Hackathon ;
    }

    # proxy all Hackathon subpages to hubspot
    location ~^/Hackathon(.*) {
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      resolver 8.8.8.8;
      proxy_connect_timeout 10;
      proxy_pass https://teams-koding.hs-sites.com/Hackathon$1$is_args$args;
    }


    location ~*(^(/(Pricing|About|Legal|Features|Blog|Docs))) {
    proxy_set_header      Host            $host;
    proxy_set_header      X-Host          $host; # for customisation
    proxy_set_header      X-Real-IP       $remote_addr;
    proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_next_upstream   error timeout   invalid_header http_500;
    proxy_connect_timeout 30;

    if ($host !~* ^(dev|default|sandbox|latest|www)) {
       return 301 /;
    }

    proxy_pass http://gowebserver;
}
    

    location ~^/IDE/.* {
      proxy_pass            http://gowebserver;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~^/kontrol/(.*) {
      proxy_pass            http://kontrol/$1$is_args$args;

      # needed for websocket handshake
      proxy_http_version    1.1;
      proxy_set_header      Upgrade         $http_upgrade;
      proxy_set_header      Connection      $connection_upgrade;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect        off;

      # Don't buffer WebSocket connections
      proxy_buffering       off;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      

    }



    location ~^/kloud/(.*) {
      proxy_pass            http://kloud/$1$is_args$args;

      # needed for websocket handshake
      proxy_http_version    1.1;
      proxy_set_header      Upgrade         $http_upgrade;
      proxy_set_header      Connection      $connection_upgrade;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect        off;

      # Don't buffer WebSocket connections
      proxy_buffering       off;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      

    }



    location /websocket {
      proxy_pass            http://broker;

      # needed for websocket handshake
      proxy_http_version    1.1;
      proxy_set_header      Upgrade         $http_upgrade;
      proxy_set_header      Connection      $connection_upgrade;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect        off;

      # Don't buffer WebSocket connections
      proxy_buffering       off;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      

    }



    location ~^/subscribe/.* {
      proxy_pass            http://broker;

      # needed for websocket handshake
      proxy_http_version    1.1;
      proxy_set_header      Upgrade         $http_upgrade;
      proxy_set_header      Connection      $connection_upgrade;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect        off;

      # Don't buffer WebSocket connections
      proxy_buffering       off;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      

    }



    location /sourcemaps {
      proxy_pass            http://sourcemaps;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /-/api/(.*) {
      proxy_pass            http://webserver/-/api/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location / {
      proxy_pass            http://webserver;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location /xhr {
      proxy_pass            http://socialworker;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location = /-/payments/stripe/webhook {
      proxy_pass            http://paymentwebhook;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location /vmwatcher {
      proxy_pass            http://vmwatcher;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/channel/(.*)/history/count {
      proxy_pass            http://socialapi/channel/$1/history/count$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/channel/(.*)/history {
      proxy_pass            http://socialapi/channel/$1/history$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/channel/(.*)/list {
      proxy_pass            http://socialapi/channel/$1/list$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/channel/by/(.*) {
      proxy_pass            http://socialapi/channel/by/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/channel/(.*)/notificationsetting {
      proxy_pass            http://socialapi/channel/$1/notificationsetting$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/notificationsetting/(.*) {
      proxy_pass            http://socialapi/notificationsetting/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/collaboration/ping {
      proxy_pass            http://socialapi/collaboration/ping$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/search-key {
      proxy_pass            http://socialapi/search-key$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/sshkey {
      proxy_pass            http://socialapi/sshkey$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/moderation/(.*) {
      proxy_pass            http://socialapi/moderation/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/social/account/channels {
      proxy_pass            http://socialapi/account/channels$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~* ^/api/social/slack/(.*) {
      proxy_pass            http://socialapi/slack/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      proxy_buffering off;
    }



    location ~ /api/social/(.*) {
      proxy_pass            http://socialapi/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      allow                 127.0.0.0/8;
      allow                 192.168.0.0/16;
      allow                 172.16.0.0/12;
      deny                  all;
      
      
    }



    location ~ /sitemap(.*).xml {
      proxy_pass            http://socialapi/sitemap$1.xml;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/gatekeeper/(.*) {
      proxy_pass            http://gatekeeper/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /-/ingestor/(.*) {
      proxy_pass            http://gatheringestor/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/integration/(.*) {
      proxy_pass            http://integration/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /api/webhook/(.*) {
      proxy_pass            http://webhook/$1$is_args$args;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      
    }



    location ~ /-/content-rotator/(.*) {
      proxy_pass            http://koding.github.io/content-rotator/$1;

      proxy_set_header      Host            $host;
      proxy_set_header      X-Host          $host; # for customisation
      proxy_set_header      X-Real-IP       $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      # try again with another upstream if there is an error
      proxy_next_upstream   error timeout   invalid_header http_500;

      # proxy should connect in 1 second
      proxy_connect_timeout 1;

      
      
      resolver 8.8.8.8;
    }



  # close server
  }

  			
  # redirect www to non-www
  server {
     server_name "~^www.(.*)$" ;
     return 301 $scheme://$1$request_uri ;
  }

  # redirect old.koding.com to koding.com
  server {
     server_name "~^old.koding.com" ;
     return 301 $scheme://koding.com$request_uri ;
  }

# close http
}