version: 2

defaults: &defaults
  resource_class: medium
  docker:
    - image: koding/circle@sha256:33519ba755fd1a436e7891782a65b1d99b02fafebc104bd0e8ed9bc5e83d3e71
  working_directory: /koding

workflows:
  version: 2
  default:
    jobs:
      - dependencies
      - configure:
          requires:
            - dependencies
      - lint:
          requires:
            - dependencies
      - client:
          requires:
            - configure
      - go:
          requires:
            - configure
      - go-test:
          requires:
            - go

jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - run: scripts/check_package_json_constraints.sh
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}
      - restore_cache:
          keys:
            - client-node_modules-{{ checksum "client/package.json" }}
      - restore_cache:
          keys:
            - landing-node_modules-{{ checksum "client/landing/package.json" }}
      - run:
          name: npm install
          command: npm install --unsafe-perm
      - save_cache:
          key: node_modules-{{ checksum "package.json" }}
          paths:
            - node_modules
      - save_cache:
          key: client-node_modules-{{ checksum "client/package.json" }}
          paths:
            - client/node_modules
      - save_cache:
          key: landing-node_modules-{{ checksum "client/landing/package.json" }}
          paths:
            - client/landing/node_modules
      - save_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          paths:
            - .

  configure:
    <<: *defaults
    steps:
      - restore_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: credentials
          command: env BRANCH=$CIRCLE_BRANCH scripts/copy-deployment-credentials.sh
      - run:
          name: configure
          command: ./configure --config dev --version $(git rev-parse --short HEAD) --host dev.koding.com:8090 --hostname dev.koding.com --countlyApiPort "80"
      - save_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-{{ epoch }}
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - restore_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: coffeelint
          command: $(npm bin)/coffeelint --quiet .

  client:
    <<: *defaults
    steps:
      - restore_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: check client code quality
          command: scripts/check_client_code_quality.sh
      - restore_cache:
          keys:
            - client-happypack-{{ .Branch }}-{{ .Revision }}
            - client-happypack-{{ .Branch }}
            - client-happypack-master
      - run:
          name: build client
          command: make -C client dist
      - run:
          name: sync website assets
          command: |
            [[ -z "$S3CMD_ACCESS_KEY" || -z "$S3CMD_SECRET_KEY" ]] && exit 0
            s3cmd sync --access_key=$S3CMD_ACCESS_KEY --secret_key=$S3CMD_SECRET_KEY \
              --no-mime-magic --guess-mime-type --acl-public \
              website/a/p/p/$(git rev-parse --short HEAD)/ \
              s3://koding-assets/a/p/p/$(git rev-parse --short HEAD)/
      - save_cache:
          key: client-happypack-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
          paths:
            - client/.happypack
      - save_cache:
          key: client-happypack-{{ .Branch }}-{{ epoch }}
          paths:
            - client/.happypack

  go:
    <<: *defaults
    steps:
      - restore_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: Go Meta Linter
          command: scripts/gometalinter.sh
      - restore_cache:
          keys:
            - go-{{ .Branch }}-{{ .Revision }}
            - go-{{ .Branch }}
            - go-master
      - run:
          name: touch files restored from cache
          command: |
            timestamp=$(date --date="@$(($(date +%s) + 60))" +%m%d%H%M)
            find go/bin -exec touch {} -t $timestamp \;
            find go/pkg -exec touch {} -t $timestamp \;
      - run:
          name: touch changed go source files
          command: |
            timestamp=$(date --date="@$(($(date +%s) + 120))" +%m%d%H%M)
            base=origin/master
            head=$(git rev-parse HEAD)
            git diff --name-only $base...$head go/ | xargs --no-run-if-empty touch -t $timestamp
      - run: env GOGC=10 go/build.sh
      - save_cache:
          key: go-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
          paths:
            - go/bin
            - go/pkg
      - save_cache:
          key: go-{{ .Branch }}-{{ epoch }}
          paths:
            - go/bin
            - go/pkg
      - save_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-{{ epoch }}
          paths:
            - .

  go-test:
    <<: *defaults
    steps:
      - restore_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - run:
          name: check kite configuration
          command: ./run exec scripts/gotests.sh kites koding/kites/config
      - run:
          name: check generated JSON files
          command: ./run exec scripts/check-generated-files.sh
      - run:
          name: test kites
          command: ./run exec go/src/koding/kites/e2etest/e2etest.sh
      - run:
          name: test klient
          command: ./run exec scripts/test-klient.sh
      - run:
          name: test kd
          command: ./run exec scripts/test-kd.sh
      - run:
          name: test kontrol
          command: ./run exec scripts/gotests.sh koding/kites/kontrol/kontrol
      - run:
          name: test kloud
          command: ./run exec scripts/gotests.sh kites \
            koding/kites/kloud/provider/... koding/kites/kloud/credential/... \
            koding/kites/kloud/stack/... koding/kites/kloud/kloud/...
      - run:
          name: codecov
          command: |
            [[ -n "$CODECOV_TOKEN" ]] && \
              bash <(curl --silent https://codecov.io/bash) -X gcov -X fix || \
              exit 0
      - save_cache:
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-{{ epoch }}
          paths:
            - .
