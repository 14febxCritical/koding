files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo "switching to /var/app/current"
      cd /var/app/current
      source /etc/profile
      echo "loading npm modules"

      ulimit -n 10000
      rm -rf ./node_modules

      npm cache clean
      HOME=/root npm i --unsafe-perm

      ./scripts/reset-node-modules.sh
      ./scripts/patch-node-modules.sh

      echo "configure build"
      ./configure --config prod --projectRoot /opt/koding

      echo "setting ulimit"

      echo "build client"
      ./run buildclient

      echo "build go binaries"
      go/build.sh

      echo "build social api"
      echo "cwd: go/src/socialapi"
      cd ./go/src/socialapi
      export GOPATH=/var/app/current/go/bin
      make configure
      make install
      make build

      chown -R webapp:webapp /var/app/current

      cd /var/app/current


  "/opt/elasticbeanstalk/hooks/appdeploy/post/02init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo  "installing supervisord"
      easy_install supervisor || echo "supervisord is allready installed"
      echo "adding supervisord to startup scripts"
      cp /var/app/current/deployment/supervisord_initd.conf /etc/rc.d/init.d/supervisord
      chmod +x /etc/rc.d/init.d/supervisord
      chkconfig --add supervisord

      echo "create log folders"
      mkdir -p /var/log/supervisord/
      mkdir -p /var/log/koding/
      echo "created log folders"

      echo "running with new supervisord config"
      cp /var/app/current/deployment/generated_files/supervisord.conf /etc/supervisord.conf
      service supervisord restart
      echo "updated supervisord config"


  "/opt/elasticbeanstalk/hooks/appdeploy/post/03init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo "stopping httpd if exists"
      service httpd stop || echo "httpd is stopped"

      echo "updating ngnix configuration"

      echo "moving nginx config"
      cp /var/app/current/deployment/generated_files/nginx.conf /etc/nginx/
      echo "updated nginx config"

      echo "restarting ngnix with current config"
      service nginx restart
      echo "restarted nginx"

