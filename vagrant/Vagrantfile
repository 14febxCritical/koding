# -*- mode: ruby -*-
# vi: set ft=ruby :

hosts = {
        "koding.local"   => "10.5.5.2",
        "rabbitmq.local" => "10.5.5.3",
        "cl.local"       => "10.5.5.4",
        "ldap.local"     => "10.5.5.5",
        "cephClient.local" => "10.5.5.6",
}

workers = {
        "web0.local"     => "10.5.5.6",
        "web1.local"     => "10.5.5.7",
        "web3.local"     => "10.5.5.8",
        "web4.local"     => "10.5.5.9",
}

if ENV["WEB_WORKERS"]
    hosts.update(workers)
else
    "**** NOTE *****"
    puts "if you want to start additional NodeJS servers ( #{workers.keys.join(', ')} )"
    puts "set env variable with 'export WEB_WORKERS=true'"
    puts "*******"
end

count=0
File.open('/etc/hosts').each_line do |s|
    hosts.each_pair do |host,ip|
        host = host.gsub(".","\\.")
        ip = ip.gsub(".","\\.")
        if s.match(/^#{ip}\s+#{host}/)
            count += 1
        end
    end
end

unless count.eql?(hosts.length)
    puts "******************** WARNING !!! ****************\n\n"
    puts "please add the following hosts to the /etc/hosts:"
    hosts.each_pair do |host,ip|
        puts "#{ip} #{host}"
    end
    puts "******************** WARNING !!! ****************\n\n"
end


private_ssh_key = "vagrant.pem"
template_centos_url = "https://s3.amazonaws.com/koding-vagrant-Lti5bj61mVnfMkhX/centos64.box"
template_cloudlinux_url = "https://s3.amazonaws.com/koding-vagrant-Lti5bj61mVnfMkhX/cloudlinux64.box"
# template_ubuntu120464_url = "https://s3.amazonaws.com/koding-vagrant-Lti5bj61mVnfMkhX/ubuntu1204-64.box"
template_ubuntu121064_url = "https://s3.amazonaws.com/koding-vagrant-Lti5bj61mVnfMkhX/ubuntu1210-64.box"

koding_git_dir = ENV['PWD']
cookbooks_dir = "#{koding_git_dir}/vagrant/cookbooks"
roles_dir = "#{koding_git_dir}/vagrant/roles"


# start VMs only in the toplevel git directory
toplevel = `/usr/bin/git rev-parse --show-toplevel`.chop.downcase
unless toplevel.eql?(koding_git_dir.downcase)
    STDERR.puts "you have to change directory to the git toplevel first"
    exit 1
end

File.new(private_ssh_key).chmod(0600)

Vagrant::Config.run do |config|
    config.ssh.private_key_path = private_ssh_key

    # ---- Ceph client configuration -------
    config.vm.define :cephClient do |cephClient_config|

          cephClient_config.vm.box = "ubuntu1210-64"
          cephClient_config.vm.box_url = template_ubuntu121064_url
          cephClient_config.vm.network :hostonly, hosts["cephClient.local"]
          cephClient_config.vm.host_name = "cephClient.local"
          cephClient_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
          cephClient_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
          cephClient_config.vm.customize [
                                    "modifyvm", :id,
                                    "--memory", 512,
                                    "--cpus", 2,
                                    "--name", "koding_VM"
                                  ]

          cephClient_config.vm.provision :chef_solo do |chef|
            chef.cookbooks_path = cookbooks_dir
            chef.roles_path = roles_dir
            chef.add_role("ceph-client")
          end
    end
    # ----- end of Ceph client configuration -----


    # ---- Web server configuration -------
    config.vm.define :web do |web_config|
          
          web_config.vm.box = "centos64"
          web_config.vm.box_url = template_centos_url
          web_config.vm.network :hostonly, hosts["koding.local"]
          web_config.vm.host_name = "koding.local"
          web_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
          web_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
          web_config.vm.customize [
                                    "modifyvm", :id,
                                    "--memory", 512,
                                    "--cpus", 2,
                                    "--name", "koding_web"
                                  ]

          web_config.vm.provision :chef_solo do |chef|
            chef.cookbooks_path = cookbooks_dir
            chef.roles_path = roles_dir
            chef.add_role("base_server")
            chef.add_role("web_server_vagrant")
          end
    end
    # ----- end of Web server configuration -----
    if ENV["RUN_WORKERS"]
        # ---- Web0 server configuration -------
        config.vm.define :web0 do |web0_config|
              
              web0_config.vm.box = "centos64"
              web0_config.vm.box_url = template_centos_url
              web0_config.vm.network :hostonly, hosts["web0.local"]
              web0_config.vm.host_name = "web0.local"
              web0_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
              web0_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
              web0_config.vm.customize [
                                        "modifyvm", :id,
                                        "--memory", 368,
                                        "--cpus", 1,
                                        "--name", "koding_web0"
                                      ]

              web0_config.vm.provision :chef_solo do |chef|
                chef.cookbooks_path = cookbooks_dir
                chef.roles_path = roles_dir
                chef.add_role("base_server")
                chef.add_role("web_server")
              end
        end
        # ----- end of Web0 server configuration -----


        # ---- Web1 server configuration -------
        config.vm.define :web1 do |web1_config|
              
              web1_config.vm.box = "centos64"
              web1_config.vm.box_url = template_centos_url
              web1_config.vm.network :hostonly, hosts["web1.local"]
              web1_config.vm.host_name = "web1.local"
              web1_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
              web1_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
              web1_config.vm.customize [
                                        "modifyvm", :id,
                                        "--memory", 368,
                                        "--cpus", 1,
                                        "--name", "koding_web1"
                                      ]

              web1_config.vm.provision :chef_solo do |chef|
                chef.cookbooks_path = cookbooks_dir
                chef.roles_path = roles_dir
                chef.add_role("base_server")
                chef.add_role("web_server")
              end
        end
        # ----- end of Web server configuration -----


        # ---- Web2 server configuration -------
        config.vm.define :web2 do |web2_config|
              
              web2_config.vm.box = "centos64"
              web2_config.vm.box_url = template_centos_url
              web2_config.vm.network :hostonly, hosts["web2.local"]
              web2_config.vm.host_name = "web2.local"
              web2_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
              web2_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
              web2_config.vm.customize [
                                        "modifyvm", :id,
                                        "--memory", 368,
                                        "--cpus", 1,
                                        "--name", "koding_web2"
                                      ]

              web2_config.vm.provision :chef_solo do |chef|
                chef.cookbooks_path = cookbooks_dir
                chef.roles_path = roles_dir
                chef.add_role("base_server")
                chef.add_role("web_server")
              end
        end
        # ----- end of Web server configuration -----


        # ---- Web3 server configuration -------
        config.vm.define :web3 do |web3_config|
              
              web3_config.vm.box = "centos64"
              web3_config.vm.box_url = template_centos_url
              web3_config.vm.network :hostonly, hosts["web3.local"]
              web3_config.vm.host_name = "web3.local"
              web3_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
              web3_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
              web3_config.vm.customize [
                                        "modifyvm", :id,
                                        "--memory", 368,
                                        "--cpus", 1,
                                        "--name", "koding_web3"
                                      ]

              web3_config.vm.provision :chef_solo do |chef|
                chef.cookbooks_path = cookbooks_dir
                chef.roles_path = roles_dir
                chef.add_role("base_server")
                chef.add_role("web_server")
              end
        end
        # ----- end of Web server configuration -----


        # ---- Web4 server configuration -------
        config.vm.define :web4 do |web4_config|
              
              web4_config.vm.box = "centos64"
              web4_config.vm.box_url = template_centos_url
              web4_config.vm.network :hostonly, hosts["web4.local"]
              web4_config.vm.host_name = "web4.local"
              web4_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
              web4_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
              web4_config.vm.customize [
                                        "modifyvm", :id,
                                        "--memory", 368,
                                        "--cpus", 1,
                                        "--name", "koding_web4"
                                      ]

              web4_config.vm.provision :chef_solo do |chef|
                chef.cookbooks_path = cookbooks_dir
                chef.roles_path = roles_dir
                chef.add_role("base_server")
                chef.add_role("web_server")
              end
        end
        # ----- end of Web server configuration -----
    end # end of if ENV["RUN_WORKERS"]



    # ---- RabbitMQ server configuration -------
    config.vm.define :rabbitmq do |rabbitmq_config|

          rabbitmq_config.vm.box = "centos64"
          rabbitmq_config.vm.box_url = template_centos_url
          rabbitmq_config.vm.host_name = "rabbitmq.local"
          rabbitmq_config.vm.forward_port 55672, 55672 # rabbitmq management console
          rabbitmq_config.vm.network :hostonly, hosts["rabbitmq.local"]
          rabbitmq_config.vm.customize [
                                    "modifyvm", :id,
                                    "--memory", 368,
                                    "--cpus", 1,
                                    "--name", "koding_rabbitmq"
                                  ]

          rabbitmq_config.vm.provision :chef_solo do |chef|
            chef.cookbooks_path = cookbooks_dir
            chef.roles_path = roles_dir
            chef.add_role("rabbitmq_server")
          end
    end
    # ----- end of RabbitMQ server configuration -----

    # ---- CloudLinux server configuration -------
    # config.vm.define :cloudlinux do |cloudlinux_config|

    #       cloudlinux_config.vm.box = "cloudlinux64"
    #       cloudlinux_config.vm.box_url = template_cloudlinux_url
    #       cloudlinux_config.vm.host_name = "cl.local"
    #       #cloudlinux_config.vm.forward_port 55672, 55672 
    #       cloudlinux_config.vm.network :hostonly, hosts["cl.local"]
    #       cloudlinux_config.vm.share_folder "koding", "/opt/koding", koding_git_dir , :create => true, :map_uid => 'root', :map_gid => 'root'
    #       cloudlinux_config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/koding", "1" ]
    #       cloudlinux_config.vm.customize [
    #                                 "modifyvm", :id,
    #                                 "--memory", 368,
    #                                 "--cpus", 1,
    #                                 "--name", "koding_cloudlinux"
    #                               ]

    #       cloudlinux_config.vm.provision :chef_solo do |chef|
    #         chef.cookbooks_path = cookbooks_dir
    #         chef.roles_path = roles_dir
    #         chef.add_role("base_server")
    #         chef.add_role("hosting_server")
    #       end
    # end
    # # ----- end of cloudlinux server configuration -----

    # # ---- LDAP server configuration -------
    # config.vm.define :ldap do |ldap_config|

    #       ldap_config.vm.box = "centos64"
    #       ldap_config.vm.box_url = template_centos_url
    #       ldap_config.vm.host_name = "ldap.local"
    #       #ldap_config.vm.forward_port 55672, 55672 
    #       ldap_config.vm.network :hostonly, hosts["ldap.local"]
    #       ldap_config.vm.customize [
    #                                 "modifyvm", :id,
    #                                 "--memory", 368,
    #                                 "--cpus", 1,
    #                                 "--name", "koding_ldap"
    #                               ]

    #       ldap_config.vm.provision :chef_solo do |chef|
    #         chef.cookbooks_path = cookbooks_dir
    #         chef.roles_path = roles_dir
    #         chef.add_role("dev-ldap_server")
    #      end
    # end
    # # ----- end of ldap server configuration -----

end

